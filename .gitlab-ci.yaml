stages:
  - setup
  - build
  - test
  - publish

variables:
  # Dynamic tag pipeline
  DATA_REPLAY_TAG: data-cache-storage
  JQ_IMAGE_TAG: "a3e97d90268154fae7933ea98e50e3c1c7c72d43"

  # FF:
  FF_NETWORK_PER_BUILD: 1
  
  # GIT:
  GIT_DEPTH: 1
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULE_DEPTH: 1
  GIT_SUBMODULE_UPDATE_FLAGS: --jobs 4

include:
  - local: scripts/ci-helpers/includes.gitlab-ci.yml

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| ANCHORS |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

.shared_tags:
  tags:
    - public-runner-docker
    - hived-for-tests

#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<| ANCHORS |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| BASH SCRIPTS |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

.base-image-build-script: 
  script:
    - |
      echo -e "\e[0Ksection_start:$(date +%s):login[collapsed=true]\r\e[0KLogging to Docker registry..."
      docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
      echo -e "\e[0Ksection_end:$(date +%s):login\r\e[0K"
      echo -e "\e[0Ksection_start:$(date +%s):build[collapsed=true]\r\e[0KBuilding base Docker images..."
      ./scripts/ci/build_ci_base_image.sh
      echo -e "\e[0Ksection_end:$(date +%s):build\r\e[0K"

.instance-build-script:
  script:
    - |
      echo -e "\e[0Ksection_start:$(date +%s):login[collapsed=true]\r\e[0KLogging to Docker registry..."
      docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
      echo -e "\e[0Ksection_end:$(date +%s):login\r\e[0K"
      echo -e "\e[0Ksection_start:$(date +%s):build[collapsed=true]\r\e[0KBuilding Hivemind Docker image..."
      ./scripts/ci-helpers/build_instance.sh \
        "$CI_COMMIT_SHORT_SHA" \
        "$CI_PROJECT_DIR" \
        "$CI_REGISTRY_IMAGE" \
        --dot-env-filename=hivemind_image.env \
        --dot-env-var-name=HIVEMIND_IMAGE
      cat hivemind_image.env
      echo -e "\e[0Ksection_end:$(date +%s):build\r\e[0K"

#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<| BASH SCRIPTS |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>| JOBS |>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

environment-debug-job:
  stage: setup
  image: "$CI_REGISTRY_IMAGE/ci-base-image:python-3.8-slim-2"
  script:
    - |
      echo "Current environment:"
      set
  tags:
    - public-runner-docker

determine-runner-tag:
  extends: .determine-runner-tag-template
  stage: setup

# Build base images if they're missing from registry
prepare_base_images:
  stage: build
  extends: 
    - .docker_image_builder_job_template
    - .shared_tags
  before_script:
    - git config --global --add safe.directory $CI_PROJECT_DIR
  script:
    - !reference [.base-image-build-script, script]

prepare_haf_image:
  stage: build
  extends: 
    - .prepare_haf_image
    - .shared_tags
  variables:
    SUBMODULE_DIR: "$CI_PROJECT_DIR/haf"
    REGISTRY_USER: "$HAF_IMG_BUILDER_USER"
    REGISTRY_PASS: "$HAF_IMG_BUILDER_PASSWORD"
  before_script:
    - git config --global --add safe.directory $CI_PROJECT_DIR/haf

prepare_hivemind_image:
  stage: build
  extends: 
    - .docker_image_builder_job_template
    - .shared_tags
  needs:
    - prepare_base_images
  before_script:
    - git config --global --add safe.directory $CI_PROJECT_DIR
  script:
    - !reference [.instance-build-script, script]
  artifacts:
    when: always
    expire_in: 7 days
    reports:
      dotenv: hivemind_image.env
    paths:
      - hivemind_image.env

dynamic-tag-pipeline-trigger:
  extends: .dynamic-tag-pipeline-trigger-template
  stage: test
  needs:
    - job: determine-runner-tag
    - job: prepare_base_images
    - job: prepare_haf_image
    - job: prepare_hivemind_image
  trigger:
    strategy: depend
    forward:
      yaml_variables: true
      pipeline_variables: true
    include:
      - local: scripts/ci-helpers/dynamic-tag-pipeline.gitlab-ci.yml

dynamic-pipeline-details-collector:
  extends: .dynamic-pipeline-details-collector-template
  stage: test
  needs:
    - job: dynamic-tag-pipeline-trigger
  tags:
    - public-runner-docker

dynamic-pipeline-test-results-collector:
  extends: .dynamic-pipeline-test-results-collector-template
  stage: test
  needs:
    - job: dynamic-pipeline-details-collector
  parallel:
    matrix:
      - CHILD_PIPELINE_JOB: [ "e2e_benchmark" ]
  tags:
    - public-runner-docker

build_and_publish_image:
  stage: publish
  extends: 
    - .publish_docker_image_template
    - .shared_tags
  before_script:
    - !reference [.publish_docker_image_template, before_script]  
  script:
    - |
      TAG=$(echo "$CI_COMMIT_TAG" | sed 's/[!+]/-/g')
      scripts/ci-helpers/build_and_publish_instance.sh --image-tag=$TAG

#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<| JOBS |<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
